import { jsPDF } from "jspdf";
import { Button } from "@/components/ui/button";

export function DownloadButton({ hoursData, customFormData }) {
  const handleDownload = () => {
    const doc = new jsPDF();

    // Header Section: Company and Invoice Info
    doc.setFontSize(16);
    doc.setTextColor(34, 34, 34); // Dark grey
    doc.text("Your Company Name", 14, 20);
    doc.setFontSize(10);
    doc.text("Address: Your Address Here", 14, 28);
    doc.text("Phone: +1 (555) 123-4567", 14, 33);
    doc.text("Email: contact@yourcompany.com", 14, 38);

    // Invoice details (align right)
    doc.setFontSize(10);
    doc.text(`Invoice #: ${customFormData.invoiceNumber}`, 150, 20);
    doc.text(`Date: ${new Date(customFormData.invoiceDate).toLocaleDateString()}`, 150, 25);
    doc.text(`Due Date: ${new Date(customFormData.dueDate).toLocaleDateString()}`, 150, 30);

    // Client info
    doc.setFontSize(10);
    doc.text(`Client: ${customFormData.clientName}`, 14, 50);
    doc.text(`Email: ${customFormData.clientEmail}`, 14, 55);

    // Stylish horizontal separator
    doc.setDrawColor(255, 153, 0); // Orange separator
    doc.setLineWidth(1);
    doc.line(14, 60, 195, 60);

    // Table Section: Description of Hours Worked
    let yOffset = 70;
    const pageHeight = doc.internal.pageSize.height;

    const addTableRow = (description, hours, rate, amount) => {
      if (yOffset + 10 > pageHeight - 20) {
        doc.addPage();
        yOffset = 20;
      }
      doc.text(description, 14, yOffset);
      doc.text(hours.toString(), 120, yOffset, { align: 'right' });
      doc.text(`${rate} EUR`, 160, yOffset, { align: 'right' });
      doc.text(`${amount.toFixed(2)} EUR`, 190, yOffset, { align: 'right' });
      yOffset += 10; // Add extra space after each row
    };

    doc.setFontSize(12);
    doc.setTextColor(255, 102, 0); // Orange for section headers
    doc.text("Hours Worked", 14, yOffset);
    yOffset += 12; // Add some space before table headers

    // Table headers
    doc.setTextColor(0, 0, 0);
    doc.text("Description", 14, yOffset);
    doc.text("Hours Worked", 120, yOffset, { align: 'right' });
    doc.text("Rate (EUR)", 160, yOffset, { align: 'right' });
    doc.text("Amount", 190, yOffset, { align: 'right' });
    yOffset += 12; // Add space after headers

    // Populate the table with PR hours and commit hours (minimal commit info)
    let subtotal = 0;
    hoursData.prHours.forEach(({ prId, title, hours }) => {
      const amount = hours * customFormData.costPerHour;
      addTableRow(`PR #${prId}`, hours, customFormData.costPerHour, amount);
      subtotal += amount;
    });

    hoursData.commitHours.forEach(({ commitSha, title, hours }) => {
      const amount = hours * customFormData.costPerHour;
      addTableRow(`Commit ${commitSha.slice(0, 7)}`, hours, customFormData.costPerHour, amount); // Show first 7 characters of commit hash
      subtotal += amount;
    });

    // Subtotal, Tax, and Total Calculation
    const taxAmount = (subtotal * customFormData.taxRate) / 100;
    const totalAmount = subtotal + taxAmount;

    yOffset += 12;
    doc.setFontSize(12);
    doc.text(`Subtotal: ${subtotal.toFixed(2)} EUR`, 14, yOffset);
    yOffset += 6;
    doc.text(`Tax (${customFormData.taxRate}%): ${taxAmount.toFixed(2)} EUR`, 14, yOffset);
    yOffset += 6;
    doc.text(`Total: ${totalAmount.toFixed(2)} EUR`, 14, yOffset);

    // Payment terms
    yOffset += 12;
    doc.setFontSize(10);
    doc.setTextColor(100, 100, 100);
    doc.text("Payment is due upon receipt. Please make the payment by the due date.", 14, yOffset);
    yOffset += 6;
    doc.text(`Payment Type: ${customFormData.paymentType}`, 14, yOffset);

    // Footer
    yOffset += 12;
    doc.text("Generated by git-invoice.com", 14, yOffset);

    // Save the PDF
    doc.save(`invoice_${customFormData.invoiceNumber}.pdf`);
  };

  return (
    <Button
      onClick={handleDownload}
      className="w-full h-16 bg-primary text-white font-semibold rounded-md shadow-md transition-all duration-300 ease-in-out"
    >
      Download Invoice PDF
    </Button>
  );
}
